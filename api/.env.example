PORT=3001
NODE_ENV=development 

# Database connection string
DATABASE_URL="postgresql://postgres:postgres@localhost:5432/dex-creator?schema=public" 

# GitHub API settings for repository forking
# Important: The token must have 'admin:org' and 'repo' scopes or fine-grained permissions with:
# - Organization permissions: Read/Write for Administration
# - Repository permissions: Read/Write access to code, pull requests, workflows, and actions
# - Required for enabling Actions on forked repositories and setting repository secrets
GITHUB_TOKEN="your-github-personal-access-token"
GITHUB_TEMPLATE_REPO="OrderlyNetworkDexCreator/dex-creator-template"

# GitHub Pages deployment token
# This token is added as a secret to forked repositories to enable GitHub Pages deployments
# Should have 'repo' and 'workflow' permissions at minimum
# The system automatically enables GitHub Actions on forked repositories to allow this token to work
TEMPLATE_PAT="your-github-pages-deployment-token"

# Cerebras API for theme generation
CEREBRAS_API_KEY="your-cerebras-api-key"
CEREBRAS_API_URL="https://api.cerebras.ai/v1"

# ORDER Token Verification Settings
# Ethereum ORDER token address
ETH_ORDER_ADDRESS=0xABD4C63d2616A5201454168269031355f4764337
# Arbitrum ORDER token address
ARB_ORDER_ADDRESS=0x4E200fE2f3eFb977d5fd9c430A41531FB04d97B8
# Ethereum receiver address
ETH_RECEIVER_ADDRESS=0x<RECEIVER_ADDRESS_HERE>
# Arbitrum receiver address
ARB_RECEIVER_ADDRESS=0x<RECEIVER_ADDRESS_HERE>
# Amount of ORDER tokens required for DEX graduation (minimum amount to verify a transaction)
# Controls the threshold for transaction verification - users must send at least this amount
# This should match the VITE_REQUIRED_ORDER_AMOUNT in the frontend configuration
REQUIRED_ORDER_AMOUNT=1000

# RPC URLs for Supported Chains
ETH_RPC_URL=https://ethereum-rpc.publicnode.com
ARBITRUM_RPC_URL=https://arbitrum-one.public.blastapi.io

# Telegram Bot Configuration
# Bot Token from BotFather (https://t.me/botfather)
TELEGRAM_BOT_TOKEN="your-telegram-bot-token"

# ID of the main community group where the bot will post graduation announcements
# This must be a group where the bot is already a member and has posting permissions
TELEGRAM_MAIN_GROUP_ID="-100123456789"

# ID of the community group where graduated DEXes will be invited to join
# This must be a group where the bot is an admin with invite permissions
TELEGRAM_COMMUNITY_GROUP_ID="-100987654321"

# Usernames of people to notify via DM when a DEX graduates (comma-separated, without @ symbol)
# Example: "orderlynetwork,mariorderly,supportuser1,supportuser2"
# Note: These users must have previously interacted with the bot for DMs to work
TELEGRAM_NOTIFY_USERS="orderlynetwork,support1,support2"

# JSON mapping of Telegram usernames to chat IDs for sending direct messages
# You'll need to get these chat IDs manually or through a helper script
# Example: {"orderlynetwork": "1234567890", "support1": "0987654321"}
TELEGRAM_USER_CHAT_IDS="{\"orderlynetwork\":\"123456789\",\"support1\":\"987654321\",\"support2\":\"456789123\"}"
